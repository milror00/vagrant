# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/xenial64"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
    config.vm.network "forwarded_port", guest: 80, host: 8085

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
    config.vm.network "private_network", ip: "192.168.33.12"


    config.vm.provision "shell", inline: <<-SHELL
      # Variables
      APPENV=local
      DBHOST=localhost
      DBNAME=wordpress
      DBUSER=wordpressuser
      DBPASSWD=password
      echo -e "\n--- Wordpress provisioned box, installing now... ---\n"
      echo -e "\n--- Updating packages list ---\n"
      apt-get  update
      echo -e "\n--- Install base packages ---\n"
      apt-get -y install vim curl build-essential software-properties-common python-software-properties > /dev/null 2>&1

	  echo -e "\n--- Install git ---\n"
	  apt-get install -y git git-core git-doc > /dev/null 2>&1

      echo -e "\n--- Install MySQL specific packages and settings ---\n"
      echo "mysql-server mysql-server/root_password password $DBPASSWD" | debconf-set-selections
      echo "mysql-server mysql-server/root_password_again password $DBPASSWD" | debconf-set-selections
      echo "phpmyadmin phpmyadmin/dbconfig-install boolean true" | debconf-set-selections
      echo "phpmyadmin phpmyadmin/app-password-confirm password $DBPASSWD" | debconf-set-selections
      echo "phpmyadmin phpmyadmin/mysql/admin-pass password $DBPASSWD" | debconf-set-selections
      echo "phpmyadmin phpmyadmin/mysql/app-pass password $DBPASSWD" | debconf-set-selections
      echo "phpmyadmin phpmyadmin/reconfigure-webserver multiselect none" | debconf-set-selections

      echo -e "\n--- Install MySQL  ---\n"
      apt-get -y install mysql-server-5.7 phpmyadmin > /dev/null 2>&1

      echo -e "\n--- Setting up our MySQL user and db ---\n"
      mysql -uroot -p$DBPASSWD -e "CREATE DATABASE $DBNAME"
      mysql -uroot -p$DBPASSWD -e "grant all privileges on $DBNAME.* to '$DBUSER'@'localhost' identified by '$DBPASSWD'"

	  echo -e "\n--- Installing Apache packages ---\n"
	  apt-get -y install apache2  > /dev/null 2>&1

      echo -e "\n--- Installing PHP-specific packages ---\n"
      apt-get -y install php7.0 php7.0-cli php7.0-gd php7.0-json php7.0-mysql php7.0-readline

      echo -e "\n--- Setting up wordpress ---\n"
      cd /opt
	  wget http://wordpress.org/latest.tar.gz  > /dev/null 2>&1
	  tar xzvf latest.tar.gz  > /dev/null 2>&1
	  cd /opt/wordpress  > /dev/null 2>&1
	  cp wp-config-sample.php wp-config.php  > /dev/null 2>&1
	  replace "database_name_here" "$DBNAME" -- wp-config.php  > /dev/null 2>&1
	  replace "username_here" "$DBUSER" -- wp-config.php  > /dev/null 2>&1
	  replace "password_here" "$DBPASSWD" -- wp-config.php  > /dev/null 2>&1
	  cp -R /opt/wordpress /var/www/html  > /dev/null 2>&1
	  cd /var/www/html  > /dev/null 2>&1
	  chown -R www-data /var/www/html  > /dev/null 2>&1
	  mkdir /var/www/html/wordpress/wp-content/uploads  > /dev/null 2>&1
	  chown -R :www-data /var/www/html/wordpress/wp-content/uploads  > /dev/null 2>&1

	  echo -e "\n--- restart apache2 ---\n"
	  sudo service apache2 restart > /dev/null 2>&1
    SHELL
end
